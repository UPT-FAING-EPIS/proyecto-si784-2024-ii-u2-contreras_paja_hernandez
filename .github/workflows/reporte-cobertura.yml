name: Pruebas y Publicación en GitHub Pages

on: 
  push:
    branches: 
      - main  
  pull_request:
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Listar archivos para verificar la estructura
      run: ls -R

    - name: Ejecutar pruebas y recolectar cobertura
      run: |
        cd ProyectoAsistencia/ProyectoAsistencia.Tests  
        dotnet test --filter "FullyQualifiedName~Controllers|FullyQualifiedName~Models|FullyQualifiedName~Views" --collect:"XPlat Code Coverage"

    - name: Verificar archivos generados
      run: ls -R ProyectoAsistencia/ProyectoAsistencia.Tests/TestResults

    - name: Generar Reportes y Publicar en GitHub Pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: | 
        cd ProyectoAsistencia/ProyectoAsistencia.Tests
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator "-reports:TestResults/**/coverage.cobertura.xml" "-targetdir:Reports/Cobertura" -reporttypes:HTML
        
        # Crear la carpeta public y copiar los archivos necesarios
        mkdir -p ../public
        cp Reports/Cobertura/index.html ../public/

        # Configurar Git para la publicación en GitHub Pages y hacer el commit en gh-pages
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        
        # Copiar contenido de la carpeta public a la raíz de gh-pages y realizar el push
        git fetch origin
        git checkout -B gh-pages
        cp -r ../public/* .
        git add .
        git commit -m "Add test report"
        git push origin gh-pages --force
