name: Pruebas y Publicación en GitHub Pages

on: 
  push:
    branches: 
      - main  
  pull_request:
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Listar archivos para verificar la estructura
      run: ls -R

    - name: Ejecutar pruebas y recolectar cobertura
      run: |
        cd ProyectoAsistencia/ProyectoAsistencia.Tests  
        dotnet test --collect:"XPlat Code Coverage"
      continue-on-error: true

    - name: Verificar archivos generados
      run: ls -R ProyectoAsistencia/ProyectoAsistencia.Tests/TestResults

    - name: Ejecutar Stryker y generar reporte de mutaciones
      run: |
        cd ProyectoAsistencia/ProyectoAsistencia.Tests
        dotnet tool install -g dotnet-stryker
        dotnet stryker

        # Verificar si se generó el reporte de mutaciones
        latest_folder=$(ls -td StrykerOutput/* | head -n 1)
        if [ ! -f "$latest_folder/reports/mutation-report.html" ]; then
          echo "Error: El reporte de mutaciones no se generó."
          exit 1
        fi

        # Crear carpeta "ReportesGH" en la raíz del proyecto
        mkdir -p ../../ReportesGH
        cp "$latest_folder/reports/mutation-report.html" ../../ReportesGH/

    - name: Generar reportes de cobertura
      run: |
        cd ProyectoAsistencia/ProyectoAsistencia.Tests
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator "-reports:TestResults/**/coverage.cobertura.xml" "-targetdir:Reports/Cobertura" -reporttypes:HTML

        # Copiar el reporte de cobertura a la carpeta "ReportesGH"
        mkdir -p ../../ReportesGH
        cp Reports/Cobertura/index.html ../../ReportesGH/

    - name: Publicar en GitHub Pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

        # Copiar el contenido de la carpeta ReportesGH a la raíz de gh-pages
        git fetch origin
        git checkout -B gh-pages
        git rm -rf ./*
        cp -r ../ReportesGH/* .
        git add .
        git commit -m "Add test and mutation reports"
        git push origin gh-pages --force
