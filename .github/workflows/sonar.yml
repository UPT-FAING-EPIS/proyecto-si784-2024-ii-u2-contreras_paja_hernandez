name: "SonarCloud Analysis for .NET"

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    runs-on: windows-latest  

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.x  

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Add .NET tools to PATH
        run: echo "$env:USERPROFILE\.dotnet\tools" >> $env:GITHUB_PATH
        shell: pwsh

      - name: Restore, Build, Test, and Generate Coverage Report
        run: |
          dotnet restore
          dotnet build
          cd ProyectoAsistencia.Tests
          coverlet ./bin/Debug/net8.0/ProyectoAsistencia.Tests.dll --target "dotnet" --targetargs "test --no-build" -f opencover -o "coverage.xml"
          cd ..

      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin \
            /k:"alvarocontreras13_calidadproyecto" \
            /o:"alvarocontreras13" \
            /d:sonar.projectName="ProyectoAsistencia" \
            /d:sonar.projectVersion="1.0" \
            /d:sonar.sources="ProyectoAsistencia" \
            /d:sonar.exclusions="**/bin/**,**/obj/**,**/TestResults/**,**/*.json" \
            /d:sonar.tests="ProyectoAsistencia.Tests" \
            /d:sonar.test.inclusions="ProyectoAsistencia.Tests/**/*.cs" \
            /d:sonar.cs.opencover.reportsPaths="ProyectoAsistencia.Tests/coverage.xml" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

          dotnet build

          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
